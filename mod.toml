# Config file for an example Majora's Mask: Recompiled mod.

# Fields that end up in the mod's manifest.
[manifest]

# Unique ID of this mod. Pick something long enough that it'll never be the same as any other mod.
# The name displayed in the mod management menu is separate from this so this doesn't need to be human readable.
id = "mm_recomp_rando"

# Version of this mod.
version = "0.8.0"

# The name that will show up for this mod in the mod menu. This should be human readable.
display_name = "MMRecompRando"

# The description that will show up when this mod is displayed in the mod menu. This should be human readable.
description =  """
funny zelda rando
move the zelda things around

https://github.com/RecompRando/MMRecompRando"""

# A short description that will show up in this mod's entry in the mod list. This should be human readable and kept short
# to prevent it from being cut off due to the limited space.
short_description = "schnigedy ding-dong"

# Authors of this mod.
authors = [ "ThatHypedPerson", "PixelShake92", "Muervo_", "dcvz", "CelestialKitsune", "VincentsSin", "LittleCube" ]

# ID of the target recomp game.
game_id = "mm"

# Minimum version of the target recomp (e.g. Zelda 64: Recompiled) that this mod can run on.
minimum_recomp_version = "1.2.0"

# Dependency mods. Each entry is the mod's ID and then an optional minimum version of the dependency mod.
dependencies = [
    "owls_never_quit:1.0.0",
    "mm_recomp_better_double_sot:0.0.1",
    "mm_recomp_colors:1.0.0"
]

# Native libraries (e.g. DLLs) and the functions they export.
native_libraries = [
# APCpp Glue:
    { name = "APCpp-Glue", funcs = ["rando_init",
                                    "rando_location_is_checked",
                                    "rando_get_death_link_pending",
                                    "rando_reset_death_link_pending",
                                    "rando_get_death_link_enabled",
                                    "rando_send_death_link",
                                    "rando_get_camc_enabled",
                                    "rando_get_start_with_consumables_enabled",
                                    "rando_get_permanent_chateau_romani_enabled",
                                    "rando_get_start_with_inverted_time_enabled",
                                    "rando_get_receive_filled_wallets_enabled",
                                    "rando_get_starting_heart_locations",
                                    "rando_get_tunic_color",
                                    "rando_skulltulas_enabled",
                                    "rando_shopsanity_enabled",
                                    "rando_scrubs_enabled",
                                    "rando_cows_enabled",
                                    "rando_damage_multiplier",
                                    "rando_death_behavior",
                                    "rando_get_location_type",
                                    "rando_get_item_id",
                                    "rando_send_location",
                                    "rando_complete_goal",
                                    "rando_has_item",
                                    "rando_get_items_size",
                                    "rando_get_item"] }
]

# Inputs to the mod tool.
[inputs]

# Input elf file to generate a mod from.
elf_path = "build/mod.elf"

# Output mod filename.
mod_filename = "mm_recomp_rando"

# Reference symbol files.
func_reference_syms_file = "Zelda64RecompSyms/mm.us.rev1.syms.toml"
data_reference_syms_files = [ "Zelda64RecompSyms/mm.us.rev1.datasyms.toml", "Zelda64RecompSyms/mm.us.rev1.datasyms_static.toml" ]

# Additional files to include in the mod.
additional_files = [ ]
